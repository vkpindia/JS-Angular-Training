Object Oriented Programming in TypeScript:
_________________________________________

1. OOPS is a techniq/paradigm that relies the concept of classes and objects
2. It is used to structure a software program into simple, reusable 
pieces of code blueprints

There are many object oriented programming languages like,
TypeScript, JavaScript, Java and Python etc.

* It refers to a type of programming techniq in which programmers define 
data and its operations

* In OOPS, Class defines variables(properties) and its functions(method)
in one unit.

Principle OF OOPS:
_________________________________________

=> Every programming languages should support the folllowing  fundamental
Principles

1. Abstraction
2. Inheritance
3. Polymorphism
4. Encapsulation


Advantages Of OOP:
_________________________________________

1. Modularity
2. Reusability
3. Data Security


To Implementing OOP in TypeScript:
_________________________________________

-> TypeScript is also object oriented programming languages
-> TS supports all OOPS concepts like classes, Objects, constructors, 
Inheritance and interface


Creating a class in TypeScript:
_________________________________________

-> class keyword is used to declare a class
-> We muct provide a class name whitch should form Capital letter and next 
associated words also will start from capital later

-> And also to declare a class body we need to use curly braces({});

Syntax: 

class ClassName {
    // Fields and methods
}

Ex:

class Students {
    public sid: number = 1025;
    public sname: string = 'Smith';
}


Rules that we follow in TS to develop a class
_____________________________________________

* Do not use 'var/let/const' keyword to declare varibales/fileds in class
* Do not use 'function' keyword to define methods in class
* Use 'this' keyword to access fileds inside class functions/methods
* Each members of a class is declared as public by default


Constructor in TypeScript:
_________________________________________

-> Constructor is special type of method used to intialize the intance
at the time of creating  new object of a class

-> Constrauctor method is created in typescript by usning 'constructor' keyword

Syntax: 

constructor(arg1, arg2,...arg_n){
    // Logic
}

Ex:

class Student {
    public sid: number;
    public sname: string

    constructor(x: number, y: string){
        this.sid = x;
        this.sname = y;
    }
}


Inheritance:
_________________________________________

-> Inheritance is one of the most important OOP Principle, It helps to reuse the 
content/code of a class into another class.

-> Inheritance have abilty to create classes from a existing class.

-> The class which which share the code is called parent class/ base class
and the newly created class is called child/sub/derived class

-> The class which is inherited by other class for that we use 'extends' keyword
-> Child/Sub/Derive classes inherit all fields and methods from the parent class

Syntax:

class ParentClass {
    // class properties
}

class ChildClass extends ParentClass{
    // class properties
}


Note: Use 'super' keyword to access parent class constructor inside the child class 


interface in TypeScript:
_________________________________________

-> Interface is powerful concept in TypeScript to creating rules or to
defining rules or making contracts of a object in Typescript.

-> Interface only declare the members
-> It is the responsibility of child class to define mebers of interface.
class which is implemented interface must have to define the members of interface

-> It provides the standard stucture that the derive class should follow


Note:

-> Child class should implement all the rules 
-> If any rule is not implemented by the class, typescript compiler will 
throw error.


* 'interface' keyword is used to declare an interface;

Syntax:

interface interface_name {
    // Properties
}

Usage:

interface Test1 {
    // members
}

class Demo implements Test1 {
    // members
}

* Intefaces are not to be converted in JavaScript. It is compiled related to TS
* At the time of compilation we will be noyified typescript compiler
if any rule is not implemented.